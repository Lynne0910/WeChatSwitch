@model WebChatSwitch.Web.Models.ItemViewModel

@{
    ViewBag.Title = "Create";
}

<h2>View</h2>

@using (Html.BeginForm("CreateItem", "Item", FormMethod.Post, new { onsubmit = "return (submit(this));" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ItemViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Expectation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Expectation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Expectation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Available, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    <label>
                        @Html.EditorFor(model => model.Available)
                        @Html.ValidationMessageFor(model => model.Available, "", new { @class = "text-danger" })
                    </label>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemPhotos, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="demo-wrap upload-demo am-center" style="display:none;">
                    <div class="upload-msg">
                        Upload a file to start cropping
                    </div>
                    <div id="upload-demo"></div>
                </div>
                <input type="hidden" name="Photo1" />
                <input type="hidden" name="Photo2" />
                <input type="hidden" name="Photo3" />
                <span class="btn btn-primary" id="chooseBtn">ChoosePhoto</span>
                <input type="file" id="upload" accept="*/*" value="Choose a file" style="display:none;" />
                <button class="upload-result" type="button" style="display:none;">Confirm</button>
            </div>
        </div>

        <div class="form-group">
            <label id="info" name="info" class="alert alert-info"></label>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@*<script src="http://res.wx.qq.com/open/js/jweixin-1.0.0.js"></script>*@
<script src="~/Scripts/croppie.min.js"></script>
<link href="~/Content/croppie.css" rel="stylesheet" />
<script type="text/javascript">
    function demoUpload() {
        var $uploadCrop;

        function readFile(input) {
            $uploadCrop.croppie('bind', {
                url: input
            });

            $('.upload-demo').addClass('ready').show();
            $(".upload-result").show();
            $("#avatar").hide();
        }

        $uploadCrop = $('#upload-demo').croppie({
            exif: true,
            viewport: {
                width: 170,
                height: 170,
                type: 'square'
            },
            boundary: {
                width: 200,
                height: 200
            },
            showZoom: true
        });

        $("#chooseBtn").on("click", function () {
            wx.chooseImage({
                count: 1, // 默认9
                sizeType: ['compressed'], // 可以指定是原图还是压缩图，默认二者都有
                sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
                success: function (res) {
                    var localId = res.localIds; // 返回选定照片的本地ID列表，localId可以作为img标签的src属性显示图片
                    wx.uploadImage({
                        localId: localId[0], // 需要上传的图片的本地ID，由chooseImage接口获得
                        isShowProgressTips: 1, // 默认为1，显示进度提示
                        success: function (r) {
                            var _left = ($(window).width() - $(".zipping").width()) / 2;
                            $(".zipping").css("left", _left).show();
                            var serverId = r.serverId; // 返回图片的服务器端ID
                            $.getJSON("/Weixin/GetWeixinImageBase64?serverId=" + serverId).success(function (json) {
                                readFile(eval("{" + json + "}"));
                                $(".zipping").hide();
                            })
                        }
                    });
                }
            });
        });

        $('.upload-result').on('click', function (ev) {
            $uploadCrop.croppie('result', {
                type: 'canvas',
                size: 'original'
            }).then(function (resp) {
                popupResult({
                    src: resp
                });
            });
        });
    }

    function popupResult(result) {
        $("#avatar").attr("src", result.src).show();
        $(".demo-wrap").hide();
        $(".upload-result").hide();
        $("[name='Photo1']").val(result.src);
    }

    $(function () {
        demoUpload();
    })

    function submit() {
        var btn = $('button:submit');
        btn.attr('disabled', true);

        var Title = $("[name='Title']").val();
        var Description = $("[name='Description']").val();
        var Expectation = $("[name='Expectation']").val();
        //var Language = $("[name='Language']:checked").val();
        var Photo1 = $("[name='Photo1']").val();

        $.ajax({
            url: "CreateItem",
            method: "post",
            data: { Title: Title, Description: Description, Expectation: Expectation, Photo1: Photo1 },
            success: function (json) {
                if (json == true) {
                    $("[name='info']").val("Has photo");
                }
                else {
                    $("[name='info']").val("No photo");
                }
            },
            error: function () {
                $("[name='info']").val("No photo");
            },
            complete: function () {
                $("[name='info']").val("No photo");
            }
        });

        return false;
    }
</script>